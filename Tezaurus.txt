https://app.diagrams.net/?src=about

литерал( какое-то значение присвоеное чему-либо)
= (знак приравнивания, значение справа меняет переменную слева)
Инструкция(что программе делать)
index=itterator (переменная отвечающая за переключение итерраций)
Массив структура данных хранящая набор значений идентифицируемых по индеу и\или набору индексов.
У массива есть начало, Размер элементов(колличество ячеек памяти кждого элемента массива), Колличество элементов.
An = start + (n-1) * sell_size (Поиск нужного элемента массива)
Все операции математические делаем через обращение к индексу в массиве данных
например вектор А(1,4,6) вектор Б(6,2,8)  1*6+4*2+6*8 = сумма

векторперв(146)
векторвр(628)
размер=3
скалирование=0
индекс=0
  индекс<размер
    скаллирование=скаллирование+первый вектор(индекс)*второйвектор(индекс)
        индекс=индекс+1
Есть интерпритаторы и компиляторы
Питон интерпритируемый язык. Джава компиллируемый.
Интерпритатор выполняет команды построчно.одна за другой.   Компилятор все строки переводит на язык машины. потом уже выполнит.
i++ = (i= i+1)
Условия в коде аключается в круглые скобки (index<size)
всё что подчиняется условию в фигурных скобках { (numbers[index]>0)
                                                    count=cunt+1
                                                       index=index+1}

https://www.programiz.com/javascript/online-compiler/

Proga rabochaya
numbers = [2, -5, -13, -7, 6, -4]
size = 6
count = 0
index= 0
while (index<size) { 	
	if(numbers[index]>0) {
		count = count + 1
	}
index = index + 1 
}
console.log (count)


Max to tight position
numbers = [2, 5, 13, 7, 6, 4]
size = 6
index = 0
max_idx = 0
max = numbers[max_idx]
while (index<size){
    if (numbers[index] > max) {
        max_idx = index
        max = numbers[index]
    }
index = index + 1
}
numbers[max_idx] = numbers[size - 1]
numbers[size -1] = max

console.log (numbers)

//Start new prog c#
dotnet new console
dotnet run - start the prog
Console.write - coursor stayed on the line
console.writeline - coursor under the line 
int a = int.Parce(console.readline()) - print the peremennaya in line 
Console.wrigeline($(можем обращаться к переменной в фигурных скобках {} ,нужно для вывода переменной с пояснительной запиской в одну линию))

//int[] -массив целых чисел


                                                      